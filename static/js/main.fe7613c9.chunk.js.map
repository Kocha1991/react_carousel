{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentIndex","setCurrentIndex","className","map","img","style","transform","transition","src","alt","onClick","newIndex","length","Math","max","type","min","App","state","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gQA0EeA,EA9DmB,SAAC,GAO5B,IANLC,EAMI,EANJA,OAMI,IALJC,YAKI,MALG,EAKH,MAJJC,iBAII,MAJQ,EAIR,MAHJC,iBAGI,MAHQ,IAGR,MAFJC,yBAEI,MAFgB,IAEhB,MADJC,gBACI,SACJ,EAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAkBA,OACE,sBAAKC,UAAU,WAAf,UACE,oBAAIA,UAAU,iBAAd,SACGT,EAAOU,KAAI,SAACC,GAAD,OACV,oBAAIC,MAAO,CACTC,UAAU,cAAD,QAAiBN,EAAeJ,EAAhC,OACTW,WAAW,GAAD,OAAKV,EAAL,gBAFZ,SAKE,qBACEW,IAAKJ,EACLK,IAAKL,WAMb,wBACEM,QA1BO,WACX,IAAMC,EAAWb,GACZE,EAAeN,EAAOD,EAAOmB,QAAUnB,EAAOmB,OAC/CC,KAAKC,IAAId,EAAeN,EAAM,GAElCO,EAAgBU,IAsBZI,KAAK,SACLb,UAAU,MAHZ,kBAQA,wBACEQ,QA1CO,WACX,IAAMC,EAAWb,GACZE,EAAeN,GAAQD,EAAOmB,OAC/BC,KAAKG,IAAIhB,EAAeN,EAAMD,EAAOmB,OAASjB,GAElDM,EAAgBU,IAsCZI,KAAK,SACLb,UAAU,MAHZ,sBC3DAe,E,4MACJC,MAAQ,CACNzB,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAW0B,KAAKD,MAAhBzB,OAER,OACE,sBAAKS,UAAU,MAAf,UAEE,qBAAIA,UAAU,aAAd,2BAA0CT,EAAOmB,OAAjD,aACA,qBAAKV,UAAU,YAAf,SACE,cAAC,EAAD,CACET,OAAQA,EACRC,KAAM,EACNC,UAAW,EACXC,UAAW,IACXC,kBAAmB,IACnBC,UAAU,a,GA9BJsB,IAAMC,WAsCTJ,ICvCfK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fe7613c9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step = 3,\n  frameSize = 3,\n  itemWidth = 130,\n  animationDuration = 1000,\n  infinite = false,\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const next = () => {\n    const newIndex = infinite\n      ? (currentIndex + step) % images.length\n      : Math.min(currentIndex + step, images.length - frameSize);\n\n    setCurrentIndex(newIndex);\n  };\n\n  const prev = () => {\n    const newIndex = infinite\n      ? (currentIndex - step + images.length) % images.length\n      : Math.max(currentIndex - step, 0);\n\n    setCurrentIndex(newIndex);\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul className=\"Carousel__list\">\n        {images.map((img) => (\n          <li style={{\n            transform: `translateX(${-currentIndex * itemWidth}px)`,\n            transition: `${animationDuration}ms all ease`,\n          }}\n          >\n            <img\n              src={img}\n              alt={img}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <button\n        onClick={prev}\n        type=\"button\"\n        className=\"btn\"\n      >\n        Prev\n      </button>\n\n      <button\n        onClick={next}\n        type=\"button\"\n        className=\"btn\"\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component<{}> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className='App__title'>Carousel with {images.length} images</h1>\n        <div className=\"Container\">\n          <Carousel\n            images={images}\n            step={3}\n            frameSize={3}\n            itemWidth={130}\n            animationDuration={1000}\n            infinite={false}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}